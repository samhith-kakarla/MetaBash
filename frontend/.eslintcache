[{"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\index.js":"1","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\App.js":"2","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\JoinRoom.jsx":"3","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\Home.jsx":"4","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\CreateRoom.jsx":"5","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\BashRoom.jsx":"6","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\context\\BashContext.js":"7","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Event.jsx":"8","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Video.jsx":"9","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\VoiceChat.jsx":"10","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Navbar.jsx":"11","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\TextChat.jsx":"12","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Reaction.jsx":"13","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Chat.jsx":"14","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\config\\firebaseConfig.js":"15","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\api\\useChat.js":"16","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\index.js":"17","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\App.js":"18","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\config\\firebaseConfig.js":"19"},{"size":219,"mtime":1608368065815,"results":"20","hashOfConfig":"21"},{"size":918,"mtime":1616177976156,"results":"22","hashOfConfig":"21"},{"size":2139,"mtime":1616207526360,"results":"23","hashOfConfig":"21"},{"size":1718,"mtime":1616207443199,"results":"24","hashOfConfig":"21"},{"size":4355,"mtime":1616207599224,"results":"25","hashOfConfig":"21"},{"size":3836,"mtime":1616314390695,"results":"26","hashOfConfig":"21"},{"size":1392,"mtime":1616177237640,"results":"27","hashOfConfig":"21"},{"size":2425,"mtime":1616207574136,"results":"28","hashOfConfig":"21"},{"size":471,"mtime":1616314479306,"results":"29","hashOfConfig":"21"},{"size":2766,"mtime":1616314443288,"results":"30","hashOfConfig":"21"},{"size":1889,"mtime":1616207493103,"results":"31","hashOfConfig":"21"},{"size":6118,"mtime":1616312999437,"results":"32","hashOfConfig":"21"},{"size":1250,"mtime":1616207871183,"results":"33","hashOfConfig":"21"},{"size":11745,"mtime":1616312716763,"results":"34","hashOfConfig":"21"},{"size":482,"mtime":1616284537950,"results":"35","hashOfConfig":"21"},{"size":1433,"mtime":1616208678102,"results":"36","hashOfConfig":"21"},{"size":219,"mtime":1608368065815,"results":"37","hashOfConfig":"38"},{"size":158,"mtime":1619918643017,"results":"39","hashOfConfig":"38"},{"size":482,"mtime":1616284537950,"results":"40","hashOfConfig":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"fbbq6b",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"9rmhey",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\index.js",[],["93","94"],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\App.js",["95","96"],"import React from 'react'; \nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Redirect, Switch, Route} from 'react-router-dom'; \n\n// COMPONENTS\nimport { Home } from './pages/Home.jsx'; \nimport { JoinRoom } from './pages/JoinRoom.jsx'; \nimport { CreateRoom } from './pages/CreateRoom.jsx'; \nimport { BashRoom } from './pages/BashRoom.jsx'; \n\n// CONTEXT\nimport { BashContextProvider } from './context/BashContext'; \n\nfunction App() {\n  return (\n    <BashContextProvider>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/join\" component={JoinRoom} />\n            <Route exact path=\"/create\" component={CreateRoom} />\n            <Route exact path=\"/bash\" component={BashRoom} />\n          </Switch>\n        </div>\n      </Router>\n    </BashContextProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\JoinRoom.jsx",["97"],"import React, { useState, useContext } from 'react';  \r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// COMPONENTS\r\nimport { Navbar } from '../components/Navbar'; \r\n\r\n// CONTEXT\r\nimport { BashContext } from '../context/BashContext'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        textAlign: 'center', \r\n        width: 300, \r\n    }, \r\n    button: {\r\n        display: 'block', \r\n        margin: 'auto', \r\n        marginTop: 30,\r\n        width: 200\r\n    }, \r\n    h1: {\r\n        fontSize: 20, \r\n        marginTop: 130, \r\n    },\r\n    h12: {\r\n        marginTop: 20, \r\n        fontSize: 20, \r\n    }\r\n}));\r\n\r\nexport const JoinRoom = () => {\r\n    const classes = useStyles(); \r\n    const [code, setCode] = useState(\"\"); \r\n\r\n    const { room, joinRoom, setUser } = useContext(BashContext); \r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"#c9c9c9\", height: \"100vh\" }}>\r\n            <Navbar />\r\n            <h1 className={classes.h1}>ENTER YOUR NAME:</h1>\r\n            <TextField \r\n                id=\"filled-basic\" \r\n                label=\"Name\" \r\n                variant=\"filled\" \r\n                className={classes.input} \r\n                onChange={(e) => setUser(e.target.value)}\r\n            />\r\n            <h1 className={classes.h12}>ENTER BASH CODE:</h1>\r\n            <TextField \r\n                id=\"filled-basic\" \r\n                label=\"Bash Code\" \r\n                variant=\"filled\" \r\n                className={classes.input} \r\n                onChange={(e) => setCode(e.target.value)}\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                    joinRoom(code);\r\n                }}\r\n                component={Link}\r\n                to=\"/bash\"\r\n            >\r\n                JOIN!\r\n            </Button>   \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\CreateRoom.jsx",[],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\pages\\BashRoom.jsx",["98","99","100","101","102","103","104","105","106","107","108"],"import React, { useState, useEffect, useContext } from 'react'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n// COMPONENTS\r\nimport { Navbar } from '../components/Navbar'; \r\nimport { Video } from '../components/Video'; \r\nimport { Reaction } from '../components/Reaction'; \r\nimport { Chat } from '../components/Chat'; \r\nimport { VoiceChat } from '../components/VoiceChat'; \r\nimport { TextChat } from '../components/TextChat'; \r\n\r\n// CONTEXT\r\nimport { BashContext } from '../context/BashContext'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n        marginTop: 20, \r\n    },\r\n    button: {\r\n          height: 70, \r\n          width: 75, \r\n          fontSize: 40,\r\n    }, \r\n    paper1: {\r\n        height: 60, \r\n        textAlign: 'left', \r\n        paddingLeft: 40, \r\n        paddingTop: -15, \r\n        marginLeft: -60, \r\n        width: 450, \r\n    }, \r\n    h1: {\r\n        fontSize: 25, \r\n    }\r\n}));\r\n\r\nexport const BashRoom = () => {\r\n    const classes = useStyles(); \r\n    const { room } = useContext(BashContext); \r\n    const [selectedReaction, setSelectedReaction] = useState(\"\"); \r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#f09067', height: '100vh' }}>\r\n            <Navbar />\r\n            <div style={{ height: 500, width: 1100, margin: 'auto', marginTop: 20 }}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={5}>\r\n                        <VoiceChat />\r\n                        <TextChat />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                        <Video />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* \r\n<div className={classes.root}>\r\n    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"😃\")\r\n            }}\r\n        >\r\n            😃\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"🤬\")\r\n            }}\r\n        >\r\n            🤬\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"😲\")\r\n            }}\r\n        >\r\n            😲\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"😰\")\r\n            }}\r\n        >\r\n            😰\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"🎮\")\r\n            }}\r\n        >\r\n            🎮\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"💯\")\r\n            }}\r\n        >\r\n            💯\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"🎯\")\r\n            }}\r\n        >\r\n            🎯\r\n        </Button>\r\n        <Button \r\n            className={classes.button}\r\n            onClick={() => {\r\n                setSelectedReaction(\"🏆\")\r\n            }}\r\n        >\r\n            🏆\r\n        </Button>\r\n    </ButtonGroup>\r\n</div>\r\n*/\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\context\\BashContext.js",["109"],"import React, { createContext, useState } from 'react'; \r\n\r\nimport firebase from '../config/firebaseConfig'; \r\n\r\nexport const BashContext = createContext(); \r\n\r\nexport const BashContextProvider = (props) => {\r\n    const [room, setRoom] = useState({}); \r\n    const [user, setUser] = useState(\"\"); \r\n\r\n    const joinRoom = (code) => {\r\n        fetch(`http://127.0.0.1:8000/api/join/${code}`).then((response) => response.json()).then(\r\n            (data) => {\r\n                setRoom(data); \r\n                console.log(\"Joined room successfully\"); \r\n            }\r\n        ); \r\n    }\r\n\r\n    const createRoom = (room) => {\r\n        try {\r\n            fetch('http://127.0.0.1:8000/api/create/', {\r\n                method: 'POST', \r\n                headers: {\r\n                    'Content-type': 'application/json', \r\n                }, \r\n                body: JSON.stringify(room), \r\n            }).then((response) => response.json()).then((data) => {\r\n                setRoom(data); \r\n                console.log(data); \r\n                console.log(\"Room created :)\"); \r\n            }); \r\n        } catch (error) {\r\n            console.log(error); \r\n            console.log(\"Room not created :(\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <BashContext.Provider value={{ room, joinRoom, createRoom, user, setUser }}>\r\n            { props.children }\r\n        </BashContext.Provider>\r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Event.jsx",["110","111","112"],"import React from 'react'; \r\nimport twitch from '../twitch.png'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      marginTop: 15, \r\n      textAlign: 'left', \r\n    },\r\n    media: {\r\n        height: 192,\r\n        width: 144, \r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        marginTop: 10, \r\n    }\r\n  });\r\n\r\nexport const Event = ({ event, selectEvent }) => {\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={4}>\r\n                        <div style={{ verticalAlign: 'middle' }}>\r\n                            <img src={twitch} style={{ width: 100, height: 100 }}/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {event.name}\r\n                        </Typography>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            {event.game}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                        <br />\r\n                            {event.info}\r\n                        </Typography>\r\n                        <Button \r\n                            size=\"large\" \r\n                            className={classes.button} \r\n                            color=\"primary\"\r\n                            onClick={selectEvent}\r\n                        >\r\n                            SELECT\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Video.jsx",[],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\VoiceChat.jsx",["113","114"],"import React, { useEffect, useRef, useState, useContext } from 'react'; \r\nimport Peer from \"simple-peer\";\r\nimport io from \"socket.io-client\"; \r\n\r\n// CONTEXT \r\nimport { BashContext } from '../context/BashContext'; \r\n\r\nexport const VoiceChat = () => {\r\n    const [peers, setPeers] = useState([]); \r\n    const socketRef = useRef(); \r\n    const userVideo = useRef(); \r\n    const peersRef = useRef([]); \r\n    const { room } = useContext(BashContext); \r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\"); \r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n            userVideo.current.srcObject = stream;\r\n            \r\n            socketRef.current.emit(\"join room\", room.code); \r\n\r\n            socketRef.current.on(\"all users\", (users) => {\r\n                const peers = []; \r\n                \r\n                users.forEach((userID) => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream); \r\n                    peersRef.current.push({ peerID: userID, peer: peer }); \r\n                    peers.push(peer); \r\n                }); \r\n\r\n                setPeers(peers); \r\n            }); \r\n\r\n            socketRef.current.on(\"user joined\", (payload) => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream); \r\n\r\n                peersRef.current.push({ peerID: payload.callerID, peer: peer }); \r\n\r\n                setPeers((users) => [...users, peer]); \r\n            }); \r\n\r\n            socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n                const item = peersRef.current.find((peer) => peer.peerID === payload.id);\r\n                \r\n                item.peer.signal(payload.signal);\r\n            });\r\n        }); \r\n    }, []); \r\n\r\n    const createPeer = (userToSignal, callerID, stream) => {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream: stream,\r\n        });\r\n\r\n        peer.on(\"signal\", (signal) => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal }); \r\n        });\r\n\r\n        return peer;\r\n    }\r\n\r\n    const addPeer = (incomingSignal, callerID, stream) => {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", (signal) => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID }); \r\n        });\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundColor: 'black', \r\n            width: 490, \r\n            height: 285, \r\n            marginLeft: -60, \r\n        }}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Navbar.jsx",["115","116","117"],"import React from 'react'; \r\nimport { Link } from 'react-router-dom'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      flexGrow: 1, \r\n    },\r\n    toolbar: {\r\n        minHeight: 50, \r\n    }\r\n}));\r\n\r\nexport const Navbar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Grid\r\n                        justify=\"space-between\" // Add it here :)\r\n                        container \r\n                        spacing={24}\r\n                    >\r\n                        <Grid item>\r\n                            <Button color=\"inherit\" component={Link} to=\"/\">MetaBash</Button>\r\n                        </Grid>\r\n                        {/* <Typography variant=\"h6\" className={classes.title}>\r\n                            News\r\n                        </Typography> */}\r\n                        <Grid item>\r\n                            <div>\r\n                                <Button color=\"inherit\" component={Link} to=\"/join\">JOIN!</Button>\r\n                                <Button color=\"inherit\" component={Link} to=\"/create\">CREATE!</Button>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\TextChat.jsx",["118","119"],"import React, { useEffect, useRef, useContext, useState } from 'react'; \r\n\r\n// UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// CONTEXT\r\nimport { BashContext } from '../context/BashContext'; \r\n\r\n// FIREBASE\r\nimport firebase from '../config/firebaseConfig'; \r\nimport 'firebase/firestore'; \r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'; \r\n\r\n// STYLES\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper1: {\r\n        height: 235, \r\n        marginTop: 10, \r\n        width: 490,\r\n        marginLeft: -60,\r\n    }, \r\n    chatInput: {\r\n        height: 20, \r\n        width: 250, \r\n    }, \r\n    sendButton: {\r\n        height: 45, \r\n    }, \r\n    messageContainerStyle1: {\r\n        width: 300, \r\n        height: 40, \r\n        maxHeight: 100, \r\n        backgroundColor: 'blue',\r\n        color: 'white', \r\n    }, \r\n    messageContainerStyle2: {\r\n        backgroundColor: 'white', \r\n        width: 300, \r\n        height: 40, \r\n        maxHeight: 100, \r\n        color: 'black', \r\n    },\r\n}));\r\n\r\nconst firestore = firebase.firestore(); \r\n\r\nexport const TextChat = () => {\r\n    const classes = useStyles(); \r\n    const messagesRef = firestore.collection('messages'); \r\n    const query = messagesRef.orderBy('createdAt').limitToLast(25); \r\n\r\n    const [messages] = useCollectionData(query, { idField: 'id' }); \r\n    const [newMessage, setNewMessage] = useState(\"\"); \r\n    const dummy = useRef(); \r\n\r\n    const { room, user } = useContext(BashContext); \r\n\r\n    const sendMessage = async (e) => {\r\n        await messagesRef.add({\r\n            text: newMessage, \r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(), \r\n            uid: room.code, \r\n            user: user, \r\n        }); \r\n\r\n        setNewMessage(\"\"); \r\n        console.log(\"New Message Sent!\"); \r\n    }\r\n\r\n    useEffect(() => {\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.paper1}>\r\n            <div style={{ \r\n                backgroundColor: 'lightgrey', \r\n                width: 470, \r\n                margin: 'auto', \r\n                height: 150, \r\n                marginBottom: 10,  \r\n                overflow: 'auto', \r\n                padding: 10, \r\n            }}>\r\n                {messages ? messages.map((message) => {\r\n                    if (message.user === user) {\r\n                        return (\r\n                            <div>\r\n                                <div style={{ textAlign: 'right', marginTop: 5, marginBottom: 5 }}>\r\n                                    <Typography component=\"h6\">ME</Typography>\r\n                                </div>\r\n                                <div style={{\r\n                                    width: 200, \r\n                                    height: 20, \r\n                                    maxHeight: 100, \r\n                                    backgroundColor: '#ff7326',\r\n                                    color: 'white', \r\n                                    textAlign: 'right', \r\n                                    paddingRight: 10, \r\n                                    paddingTop: 10, \r\n                                    borderRadius: 15,  \r\n                                    marginTop: 10, \r\n                                    marginLeft: 'auto', \r\n                                    marginRight: 0, \r\n                                }}>\r\n                                    <Typography component=\"subtitle1\">{message.text}</Typography>\r\n                                </div>\r\n                                {/* <Container className={classes.messageContainerStyle1}>\r\n                                    <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                                </Container> */}\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        <div>\r\n                            <div style={{ textAlign: 'left', marginTop: 5, marginBottom: 5 }}>\r\n                                <Typography component=\"h6\">{message.user}</Typography>\r\n                            </div>\r\n                            <div style={{\r\n                                backgroundColor: '#4ce649', \r\n                                width: 200, \r\n                                height: 20, \r\n                                maxHeight: 100, \r\n                                color: 'black',\r\n                                textAlign: 'left', \r\n                                paddingLeft: 10, \r\n                                paddingTop: 10, \r\n                                borderRadius: 15, \r\n                            }}>\r\n                                <Typography component=\"subtitle1\">{message.text}</Typography>\r\n                            </div>\r\n                            {/* <Container className={classes.messageContainerStyle2}>\r\n                                <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                            </Container> */}\r\n                        </div>\r\n                    }\r\n                }) : \"\"}\r\n                <span ref={dummy}></span>\r\n            </div>\r\n            <div>\r\n                <TextField \r\n                    id=\"filled-basic\"  \r\n                    variant=\"filled\" \r\n                    size=\"small\"\r\n                    className={classes.chatInput}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <Button \r\n                    variant=\"contained\" \r\n                    size=\"small\" \r\n                    color=\"secondary\"\r\n                    className={classes.sendButton}\r\n                    onClick={(e) => sendMessage(e)}\r\n                >\r\n                    SEND\r\n                </Button>\r\n            </div>\r\n        </Paper> \r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Reaction.jsx",["120","121","122","123","124","125","126","127"],"import React, { useEffect, useState } from 'react'; \r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      marginTop: 20, \r\n    },\r\n    button: {\r\n        height: 70, \r\n        width: 75, \r\n        fontSize: 40,\r\n    }, \r\n}));\r\n\r\nexport const Reaction = ({ reaction }) => {\r\n    const classes = useStyles();\r\n\r\n    const [count, setCount] = useState(0); \r\n\r\n    // useEffect(() => { \r\n    //   setInterval(() => {\r\n    //     count > 0 && setTimeout(() => setCount(count - 1), 1000); \r\n    //   }); \r\n    // }, []); \r\n\r\n    const regularStyle = {\r\n      visibility: \"visible\",\r\n      opacity: 1,\r\n      transition: \"opacity 0.2s linear\",\r\n    }\r\n\r\n    const fadedStyle = {\r\n      visibility: \"hidden\",\r\n      opacity: 0,\r\n      transition: \"visibility 0s 0.2s, opacity 0.2s linear\"\r\n    }\r\n\r\n    // style={count == 0 ? fadedStyle : regularStyle}\r\n\r\n    return (\r\n        <div>\r\n            {reaction}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\components\\Chat.jsx",["128","129","130","131","132","133","134"],"import React, { useState, useContext, useEffect } from 'react'; \r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// CONTEXT\r\nimport { BashContext } from '../context/BashContext'; \r\n\r\n// FIREBASE\r\nimport firebase from '../config/firebaseConfig';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'; \r\n\r\n// SOCKET.IO\r\nimport useChat from '../api/useChat'; \r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper1: {\r\n        height: 275, \r\n        marginTop: 20, \r\n        width: 500, \r\n    }, \r\n    chatInput: {\r\n        height: 20, \r\n        width: 250, \r\n    }, \r\n    sendButton: {\r\n        height: 45, \r\n    }, \r\n    messageContainerStyle1: {\r\n        width: 300, \r\n        height: 40, \r\n        maxHeight: 100, \r\n        backgroundColor: 'blue',\r\n        color: 'white', \r\n    }, \r\n    messageContainerStyle2: {\r\n        backgroundColor: 'white', \r\n        width: 300, \r\n        height: 40, \r\n        maxHeight: 100, \r\n        color: 'black', \r\n    },\r\n}));\r\n\r\nexport const Chat = () => {\r\n    const classes = useStyles(); \r\n    const { room, user } = useContext(BashContext); \r\n    const { messages, sendMessage } = useChat(room.code); \r\n    const [newMessage, setNewMessage] = useState(\"\"); \r\n\r\n    const newMessageChange = (e) => {\r\n        setNewMessage(e.target.value); \r\n    }; \r\n\r\n    const sendNewMessage = () => {\r\n        sendMessage(newMessage); \r\n        setNewMessage(\"\"); \r\n    }; \r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.paper1}>\r\n            <div style={{ \r\n                backgroundColor: 'lightgrey', \r\n                width: 435, \r\n                margin: 'auto', \r\n                height: 190, \r\n                marginBottom: 10,  \r\n                overflow: 'auto', \r\n                padding: 10, \r\n            }}>\r\n                {messages.map((message, i) => {\r\n                    if (message.ownedByCurrentUser) {\r\n                        return (\r\n                            <div>\r\n                                <div style={{ textAlign: 'right', marginTop: 5, marginBottom: 5 }}>\r\n                                    <Typography component=\"h6\">ME</Typography>\r\n                                </div>\r\n                                <div style={{\r\n                                    width: 300, \r\n                                    height: 40, \r\n                                    maxHeight: 100, \r\n                                    backgroundColor: '#ff7326',\r\n                                    color: 'white', \r\n                                    textAlign: 'right', \r\n                                    paddingRight: 10, \r\n                                    paddingTop: 10, \r\n                                    borderRadius: 15,  \r\n                                    marginTop: 15, \r\n                                    marginLeft: 'auto', \r\n                                    marginRight: 0, \r\n                                }}>\r\n                                    <Typography component=\"subtitle1\">{message.body}</Typography>\r\n                                </div>\r\n                                {/* <Container className={classes.messageContainerStyle1}>\r\n                                    <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                                </Container> */}\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        <div>\r\n                            <div style={{ textAlign: 'left', marginTop: 5, marginBottom: 5 }}>\r\n                                <Typography component=\"h6\"></Typography>\r\n                            </div>\r\n                            <div style={{\r\n                                backgroundColor: '#4ce649', \r\n                                width: 300, \r\n                                height: 40, \r\n                                maxHeight: 100, \r\n                                color: 'black',\r\n                                textAlign: 'left', \r\n                                paddingLeft: 10, \r\n                                paddingTop: 10, \r\n                                borderRadius: 15, \r\n                            }}>\r\n                                <Typography component=\"subtitle1\">{message.body}</Typography>\r\n                            </div>\r\n                            {/* <Container className={classes.messageContainerStyle2}>\r\n                                <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                            </Container> */}\r\n                        </div>\r\n                    }\r\n                })}\r\n            </div>\r\n            <div>\r\n                <TextField \r\n                    id=\"filled-basic\"  \r\n                    variant=\"filled\" \r\n                    size=\"small\"\r\n                    className={classes.chatInput}\r\n                    onChange={newMessageChange}\r\n                />\r\n                <Button \r\n                    variant=\"contained\" \r\n                    size=\"small\" \r\n                    color=\"secondary\"\r\n                    className={classes.sendButton}\r\n                    onClick={sendNewMessage}\r\n                >\r\n                    SEND\r\n                </Button>\r\n            </div>\r\n        </Paper> \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// FIREBASE CHAT\r\n\r\n    // const [messages, setMessages] = useState(null); \r\n    // const [message, setMessage] = useState(\"\"); \r\n    // const [createMessages, setCreateMessages] = useState([]); \r\n\r\n    // const getMessages = () => {\r\n    //         console.log(room); \r\n    //         firebase.firestore().collection('messages').doc(room.code).get().then((doc) => {\r\n    //             if (doc.exists) {\r\n    //                 setMessages(doc.data()); \r\n    //                 console.log(\"Messages loaded!\"); \r\n    //             } else {\r\n    //                 console.log(\"Messages not loaded for some reason\"); \r\n    //                 firebase.firestore().collection('messages').doc(room.code).set({\r\n    //                     messages: [\r\n    //                         { owner: \"\", message: \"\" }\r\n    //                     ]\r\n    //                 }).then(() => {\r\n    //                     console.log(\"Chat created!\"); \r\n    //                     firebase.firestore().collection('messages').doc(room.code).get().then((doc) => {\r\n    //                         setMessages(doc.data()); \r\n    //                     }).then(() => console.log(messages)); \r\n    //                 }).catch((error) => {\r\n    //                     console.log(error); \r\n    //                     console.log(\"Chat not created :(\"); \r\n    //                 }); \r\n    //             }\r\n    //         }).catch((error) => {\r\n    //             console.log(error, \"Messages not recieved :(\"); \r\n    //         }); \r\n    //     }\r\n\r\n    // const sendMessages = (updatedMessages) => {\r\n    //     console.log(messages); \r\n    //     firebase.firestore().collection('messages').doc(room.code).update({\r\n    //         messages: updatedMessages.messages, \r\n    //     }).then(() => {\r\n    //         console.log(\"Messages have been updated success!\"); \r\n    //         getMessages(); \r\n    //     }).catch((error) => {\r\n    //         console.log(error, \"Messages not sent :(\"); \r\n    //     }); \r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     if (!messages) {\r\n    //         getMessages(); \r\n    //     }\r\n    // }, [])\r\n\r\n{/* <Paper elevation={3} className={classes.paper1}>\r\n        <div style={{ \r\n            backgroundColor: 'lightgrey', \r\n            width: 435, \r\n            margin: 'auto', \r\n            height: 190, \r\n            marginBottom: 10,  \r\n            overflow: 'auto', \r\n            padding: 10, \r\n        }}>\r\n            {messages ? messages.messages.map((message) => {\r\n                if (message.owner === user) {\r\n                    return (\r\n                        <div>\r\n                            <div style={{ textAlign: 'right', marginTop: 5, marginBottom: 5 }}>\r\n                                <Typography component=\"h6\">ME</Typography>\r\n                            </div>\r\n                            <div style={{\r\n                                width: 300, \r\n                                height: 40, \r\n                                maxHeight: 100, \r\n                                backgroundColor: '#ff7326',\r\n                                color: 'white', \r\n                                textAlign: 'right', \r\n                                paddingRight: 10, \r\n                                paddingTop: 10, \r\n                                borderRadius: 15,  \r\n                                marginTop: 15, \r\n                                marginLeft: 'auto', \r\n                                marginRight: 0, \r\n                            }}>\r\n                                <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                            </div>\r\n                            {/* <Container className={classes.messageContainerStyle1}>\r\n                                <Typography component=\"subtitle1\">{message.message}</Typography>\r\n                            </Container> */}\r\n    //                     </div>\r\n    //                 )\r\n    //             } else {\r\n    //                 return (\r\n    //                     <div>\r\n    //                         <div style={{ textAlign: 'left', marginTop: 5, marginBottom: 5 }}>\r\n    //                             <Typography component=\"h6\">{message.owner.toUpperCase()}</Typography>\r\n    //                         </div>\r\n    //                         <div style={{\r\n    //                             backgroundColor: '#4ce649', \r\n    //                             width: 300, \r\n    //                             height: 40, \r\n    //                             maxHeight: 100, \r\n    //                             color: 'black',\r\n    //                             textAlign: 'left', \r\n    //                             paddingLeft: 10, \r\n    //                             paddingTop: 10, \r\n    //                             borderRadius: 15, \r\n    //                         }}>\r\n    //                             <Typography component=\"subtitle1\">{message.message}</Typography>\r\n    //                         </div>\r\n    //                         {/* <Container className={classes.messageContainerStyle2}>\r\n    //                             <Typography component=\"subtitle1\">{message.message}</Typography>\r\n    //                         </Container> */}\r\n    //                     </div>\r\n    //                 )\r\n    //             }\r\n    //         }) : \"\"}\r\n    //     </div>\r\n    //     <div>\r\n    //         <TextField \r\n    //             id=\"filled-basic\"  \r\n    //             variant=\"filled\" \r\n    //             size=\"small\"\r\n    //             className={classes.chatInput}\r\n    //             onChange={(e) => setMessage(e.target.value)}\r\n    //         />\r\n    //         <Button \r\n    //             variant=\"contained\" \r\n    //             size=\"small\" \r\n    //             color=\"secondary\"\r\n    //             className={classes.sendButton}\r\n    //             onClick={() => {\r\n    //                 setCreateMessages([...createMessages, { owner: user, message: message }]); // ERROR HERE\r\n    //                 // sendMessages(messages); \r\n    //                 // getMessages(); \r\n    //             }}\r\n    //         >\r\n    //             SEND\r\n    //         </Button>\r\n    //     </div>\r\n    // </Paper> */}","C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\config\\firebaseConfig.js",[],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBashParty\\frontend\\src\\api\\useChat.js",["135","136"],"import React, { useEffect, useRef, useState } from 'react'; \r\nimport socketIOClient from 'socket.io-client'; \r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; \r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\"; \r\n\r\nconst useChat = (roomID) => {\r\n    const [messages, setMessages] = useState([]); \r\n    const socketRef = useRef(); \r\n\r\n    useEffect(() => {\r\n        // Create Websocket Connection \r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            query: {\r\n                roomID, \r\n            }\r\n        }); \r\n\r\n        // Listen for Incoming Messages\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message, \r\n                ownedByCurrentUser: message.senderId === socketRef.current.id, \r\n            }; \r\n\r\n            setMessages([...messages, incomingMessage]); \r\n        }); \r\n\r\n        // Destroy Socket Reference when Connection is Closed\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n\r\n    }, [roomID]); \r\n\r\n    // Send Message to the Server (All People in Room can View)\r\n    const sendMessage = (messageBody) => {\r\n        socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            body: messageBody, \r\n            senderId: socketRef.current.id, \r\n        }); \r\n    }; \r\n\r\n    return {\r\n        messages, \r\n        sendMessage,\r\n    }\r\n}\r\n\r\n\r\nexport default useChat; ",["137","138"],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\index.js",[],["139","140"],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\App.js",["141"],"C:\\Users\\Samhith Kakarla\\Desktop\\Hackathons\\MetaBash_\\frontend\\src\\config\\firebaseConfig.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":4,"column":35,"nodeType":"148","messageId":"149","endLine":4,"endColumn":43},{"ruleId":"146","severity":1,"message":"151","line":39,"column":13,"nodeType":"148","messageId":"149","endLine":39,"endColumn":17},{"ruleId":"146","severity":1,"message":"152","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"153","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":13},{"ruleId":"146","severity":1,"message":"154","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"155","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":19},{"ruleId":"146","severity":1,"message":"157","line":13,"column":10,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"146","severity":1,"message":"158","line":14,"column":10,"nodeType":"148","messageId":"149","endLine":14,"endColumn":14},{"ruleId":"146","severity":1,"message":"159","line":50,"column":11,"nodeType":"148","messageId":"149","endLine":50,"endColumn":18},{"ruleId":"146","severity":1,"message":"151","line":51,"column":13,"nodeType":"148","messageId":"149","endLine":51,"endColumn":17},{"ruleId":"146","severity":1,"message":"160","line":52,"column":12,"nodeType":"148","messageId":"149","endLine":52,"endColumn":28},{"ruleId":"146","severity":1,"message":"161","line":52,"column":30,"nodeType":"148","messageId":"149","endLine":52,"endColumn":49},{"ruleId":"146","severity":1,"message":"162","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"163","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":19},{"ruleId":"146","severity":1,"message":"164","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":48,"column":29,"nodeType":"167","endLine":48,"endColumn":84},{"ruleId":"146","severity":1,"message":"168","line":9,"column":12,"nodeType":"148","messageId":"149","endLine":9,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":48,"column":8,"nodeType":"171","endLine":48,"endColumn":10,"suggestions":"172"},{"ruleId":"146","severity":1,"message":"173","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":18},{"ruleId":"146","severity":1,"message":"174","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":18},{"ruleId":"146","severity":1,"message":"175","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":16},{"ruleId":"146","severity":1,"message":"176","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":90,"column":52,"nodeType":"179","messageId":"180","endLine":90,"endColumn":54},{"ruleId":"146","severity":1,"message":"152","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"156","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":19},{"ruleId":"146","severity":1,"message":"159","line":25,"column":11,"nodeType":"148","messageId":"149","endLine":25,"endColumn":18},{"ruleId":"146","severity":1,"message":"181","line":27,"column":12,"nodeType":"148","messageId":"149","endLine":27,"endColumn":17},{"ruleId":"146","severity":1,"message":"182","line":27,"column":19,"nodeType":"148","messageId":"149","endLine":27,"endColumn":27},{"ruleId":"146","severity":1,"message":"183","line":35,"column":11,"nodeType":"148","messageId":"149","endLine":35,"endColumn":23},{"ruleId":"146","severity":1,"message":"184","line":41,"column":11,"nodeType":"148","messageId":"149","endLine":41,"endColumn":21},{"ruleId":"146","severity":1,"message":"152","line":1,"column":39,"nodeType":"148","messageId":"149","endLine":1,"endColumn":48},{"ruleId":"146","severity":1,"message":"176","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"146","severity":1,"message":"162","line":14,"column":8,"nodeType":"148","messageId":"149","endLine":14,"endColumn":16},{"ruleId":"146","severity":1,"message":"185","line":15,"column":10,"nodeType":"148","messageId":"149","endLine":15,"endColumn":27},{"ruleId":"146","severity":1,"message":"186","line":52,"column":19,"nodeType":"148","messageId":"149","endLine":52,"endColumn":23},{"ruleId":"177","severity":1,"message":"178","line":76,"column":44,"nodeType":"179","messageId":"180","endLine":76,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":205,"column":1,"nodeType":"189","messageId":"190","endLine":240,"endColumn":45},{"ruleId":"146","severity":1,"message":"191","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"192","line":34,"column":8,"nodeType":"171","endLine":34,"endColumn":16,"suggestions":"193"},{"ruleId":"142","replacedBy":"194"},{"ruleId":"144","replacedBy":"195"},{"ruleId":"142","replacedBy":"196"},{"ruleId":"144","replacedBy":"197"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":12},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'room' is assigned a value but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Reaction' is defined but never used.","'Chat' is defined but never used.","'classes' is assigned a value but never used.","'selectedReaction' is assigned a value but never used.","'setSelectedReaction' is assigned a value but never used.","'firebase' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'peers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'room.code'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'Typography' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'regularStyle' is assigned a value but never used.","'fadedStyle' is assigned a value but never used.","'useCollectionData' is defined but never used.","'user' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["201"],["198"],["199"],["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [room.code]",{"range":"206","text":"207"},"Update the dependencies array to be: [messages, roomID]",{"range":"208","text":"209"},[1769,1771],"[room.code]",[1053,1061],"[messages, roomID]"]